import java.util.regex.Pattern

buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://download.crashlytics.com/maven' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
        classpath 'com.squareup.gradle:gradle-android-test-plugin:0.9.1-SNAPSHOT'
        classpath 'org.notlocalhost.gradle:gradle-calabash-android-plugin:0.1.+'
    }
}
apply plugin: 'android'
apply plugin: 'crashlytics'
apply plugin: 'android-test'
apply plugin: 'calabash-test'

repositories {
    mavenCentral()
    maven { url 'http://download.crashlytics.com/maven' }

}

android {
    compileSdkVersion 18
    buildToolsVersion "17.0.0"

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 18

        versionCode getVersionCodeAndIncrement()
        versionName getVersionNameAndIncrement()

        testPackageName "com.bryankrosenbaum.later.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }
}

dependencies {
    compile 'com.crashlytics.android:crashlytics:1.+'
    compile "com.android.support:appcompat-v7:18.0.+"
    compile 'com.squareup.dagger:dagger:1.1.+'
    compile 'com.squareup.dagger:dagger-compiler:1.1.+'
    compile 'com.jakewharton:butterknife:3.0.+'

    testCompile 'junit:junit:4.10'
    testCompile 'org.robolectric:robolectric:2.2.+'
    testCompile 'com.squareup:fest-android:1.0.+'
    testCompile 'org.mockito:mockito-all:1.9.+'
    testCompile 'com.google.dexmaker:dexmaker-mockito:1.0'
}

def getVersionCodeAndIncrement() {
    println(":incrementVersion - Incrementing Version Code...")
    def manifestFile = file("src/main/AndroidManifest.xml")
    def patternVersionCode = Pattern.compile("versionCode=\"(\\d+)\"")
    def manifestText = manifestFile.getText()
    def matcherVersionCode = patternVersionCode.matcher(manifestText)
    matcherVersionCode.find()
    def mVersionCode = Integer.parseInt(matcherVersionCode.group(1))
    def mNextVersionCode = mVersionCode + 1
    def manifestContent = matcherVersionCode.replaceAll("versionCode=\"" + mNextVersionCode + "\"")
    println(":getVersionCodeAndIncrement - current versionCode=" + mVersionCode);
    println(":getVersionCodeAndIncrement - next versionCode=" + mNextVersionCode);
    manifestFile.write(manifestContent)

    return mVersionCode
}

def getVersionNameAndIncrement() {
    println(":incrementVersion - Incrementing Version Name...")
    def manifestFile = file("src/main/AndroidManifest.xml")
    def patternVersionNumber = Pattern.compile("versionName=\"(\\d+)\\.(\\d+)\\.(\\d+)\"")
    def manifestText = manifestFile.getText()
    def matcherVersionNumber = patternVersionNumber.matcher(manifestText)
    matcherVersionNumber.find()
    def majorVersion = Integer.parseInt(matcherVersionNumber.group(1))
    def minorVersion = Integer.parseInt(matcherVersionNumber.group(2))
    def buildVersion = Integer.parseInt(matcherVersionNumber.group(3))
    def mVersionName = majorVersion + "." + minorVersion + "." + buildVersion
    def mNextVersionName = majorVersion + "." + minorVersion + "." + (buildVersion + 1)
    def manifestContent = matcherVersionNumber.replaceAll("versionName=\"" + mNextVersionName + "\"")
    println(":getVersionNameAndIncrement - current versionName=" + mVersionName);
    println(":getVersionNameAndIncrement - new versionName=" + mNextVersionName);
    manifestFile.write(manifestContent)

    return mVersionName
}